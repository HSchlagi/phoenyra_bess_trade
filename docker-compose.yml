version: "3.9"
services:
  exchange:
    build: ./exchange
    container_name: exchange
    environment:
      - SQLITE_PATH=/app/exchange.db
      - REDIS_HOST=redis
      - REDIS_DB=0
      - POLICY_PATH=/app/policy/policy.yaml
      - HMAC_SECRET=phoenyra_demo_secret
    volumes:
      - ./policy:/app/policy:ro
    ports:
      - "9000:9000"
    depends_on:
      - redis
  market-feed:
    build: ./exchange
    container_name: market-feed
    command: python market_feed.py
    environment:
      - EXCHANGE_URL=http://exchange:9000
      - MARKET=epex_at
      - BIDDING_ZONE=AT
      - UPDATE_INTERVAL=300
      - ENTSO_E_TOKEN=2793353d-b5dd-4d4f-9638-8e26c88027e5
    depends_on:
      - exchange
    restart: unless-stopped

  bess-telemetry:
    build: ./exchange
    container_name: bess-telemetry
    command: python bess_telemetry.py
    environment:
      - EXCHANGE_URL=http://exchange:9000
      - BESS_MODBUS_ENABLED=false
      - BESS_MODBUS_HOST=192.168.1.100
      - BESS_MODBUS_PORT=502
      - BESS_MODBUS_UNIT_ID=1
      - BESS_MODBUS_SOC_REGISTER=0
      - BESS_MODBUS_POWER_REGISTER=1
      - BESS_MODBUS_TEMP_REGISTER=2
      - BESS_MQTT_ENABLED=false
      - BESS_MQTT_BROKER=localhost
      - BESS_MQTT_PORT=1883
      - BESS_MQTT_USERNAME=
      - BESS_MQTT_PASSWORD=
      - BESS_MQTT_TOPIC_SOC=bess/soc
      - BESS_MQTT_TOPIC_POWER=bess/power
      - BESS_MQTT_TOPIC_TEMP=bess/temperature
      - BESS_REST_ENABLED=true
      - BESS_API_KEY=bess_telemetry_key
      - BESS_UPDATE_INTERVAL=30
    depends_on:
      - exchange
    restart: unless-stopped
  webapp:
    build: ./webapp
    container_name: webapp
    environment:
      - EXCHANGE_BASE_URL=http://exchange:9000
      - API_KEY=demo
      - HMAC_SECRET=phoenyra_demo_secret
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    ports:
      - "5000:5000"
    volumes:
      - ./webapp:/app
    depends_on:
      - exchange
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - exchange
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_UNIFIED_ALERTING_ENABLED=true
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus

  # === ETRM Services (Enterprise Trading & Risk Management) ===
  forecast:
    build: ./etrm/forecast
    container_name: forecast
    ports:
      - "9500:9500"
    restart: unless-stopped

  grid:
    build: ./etrm/grid
    container_name: grid
    ports:
      - "9501:9501"
    restart: unless-stopped

  risk:
    build: ./etrm/risk
    container_name: risk
    ports:
      - "9502:9502"
    restart: unless-stopped

  credit:
    build: ./etrm/credit
    container_name: credit
    ports:
      - "9503:9503"
    restart: unless-stopped

  billing:
    build: ./etrm/billing
    container_name: billing
    ports:
      - "9504:9504"
    restart: unless-stopped
